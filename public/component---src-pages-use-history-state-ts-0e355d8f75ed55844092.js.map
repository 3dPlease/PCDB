{"version":3,"file":"component---src-pages-use-history-state-ts-0e355d8f75ed55844092.js","mappings":"wMAaO,SAASA,EACdC,EACAC,GAEA,MAA6BC,EAAAA,UAAe,WAE1C,OADcC,OAAOC,QAAQC,OAASF,OAAOC,QAAQC,MAAML,IAC3CC,KAFXI,EAAP,KAAcC,EAAd,KAaA,MAAO,CAACD,EARR,SAAkBE,GAAW,IAAD,EAC1BJ,OAAOC,QAAQI,aAAf,iBACOL,OAAOC,QAAQC,QADtB,MAC8BL,GAAMO,EADpC,IAEEE,SAASC,OAEXJ,EAAYC","sources":["webpack://gatsby-starter-default/./src/pages/useHistoryState.ts"],"sourcesContent":["import React from \"react\";\r\n\r\n/**\r\n * Stores the sate in the browser history,\r\n * making the state reusable across refreshes, navigation\r\n * and even closing and reopening the window!\r\n *\r\n * Codesandbox's preview pane does not preserve history state,\r\n * so make sure to open the preview in a new page\r\n *\r\n * @param key The key to store it in history\r\n * @param defaultTo A default value if nothing exists in history\r\n */\r\nexport function useHistoryState<T>(\r\n  key: string,\r\n  defaultTo: T\r\n): [T, (value: T) => void] {\r\n  const [state, rawSetState] = React.useState(() => {\r\n    const value = window.history.state && window.history.state[key];\r\n    return value || defaultTo;\r\n  });\r\n\r\n  function setState(value: T) {\r\n    window.history.replaceState(\r\n      { ...window.history.state, [key]: value },\r\n      document.title\r\n    );\r\n    rawSetState(value);\r\n  }\r\n\r\n  return [state, setState];\r\n}\r\n"],"names":["useHistoryState","key","defaultTo","React","window","history","state","rawSetState","value","replaceState","document","title"],"sourceRoot":""}