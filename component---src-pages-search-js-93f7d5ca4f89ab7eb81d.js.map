{"version":3,"file":"component---src-pages-search-js-93f7d5ca4f89ab7eb81d.js","mappings":"6LAIMA,EAAS,SAAC,GAAD,IAAGC,EAAH,EAAGA,UAAH,OACb,0BACEC,MAAO,CACLC,WAAW,gBACXC,aAAa,YAGf,uBACEF,MAAO,CACLG,OAAO,SACPC,SAAU,IACVC,QAAQ,sBAGV,sBAAIL,MAAO,CAAEG,OAAQ,IACnB,gBAAC,EAAAG,KAAD,CACEC,GAAG,IACHP,MAAO,CACLQ,MAAM,QACNC,eAAe,SAGhBV,OAWXD,EAAOY,aAAe,CACpBX,UAAU,IAGZ,QCaA,EAxCe,SAAC,GAAkB,IAAD,EAAfY,EAAe,EAAfA,SACVC,GAAOC,EAAAA,EAAAA,gBAAe,cAU5B,OACE,gCACE,gBAAC,EAAD,CAAQd,WAAW,UAAAa,EAAKE,KAAKC,oBAAV,eAAwBC,QAAxB,UACnB,uBACEhB,MAAO,CACLG,OAAO,SACPC,SAAU,IACVC,QAAQ,wBAGV,4BAAOM,GACP,0BACEX,MAAO,CACLiB,UAAU,SAFd,MAKK,IAAIC,MAAOC,cALhB,mBAOE,qBAAGC,KAAK,4BAAR,e,0FC9BH,SAASC,EACdC,EACAC,GAEA,IACA,EAA6BC,EAAAA,UAAe,WAE1C,MAHwC,oBAAXC,QAEDA,OAAOC,QAAQC,OAASF,OAAOC,QAAQC,MAAML,IACzDC,KAFXI,EAAP,KAAcC,EAAd,KAaA,MAAO,CAACD,EARR,SAAkBE,GAAW,IAAD,EAC1BJ,OAAOC,QAAQI,aAAf,iBACOL,OAAOC,QAAQC,QADtB,MAC8BL,GAAMO,EADpC,IAEEE,SAASf,OAEXY,EAAYC,K,cCgUhB,EA/UkB,SAAAG,GAEhB,IAAQpB,EAASoB,EAATpB,KACFqB,EAAWrB,EAAKsB,kBAAkBC,MAExC,EAAuCd,EAAgB,aAAc,IAA9De,EAAP,KAAuBC,EAAvB,KACA,EAA0ChB,EAAgB,iBAAkB,IAArEiB,EAAP,KAAsBC,EAAtB,KACA,EAA8ClB,EAAgB,mBAAoB,IAA3EmB,EAAP,KAAwBC,EAAxB,KACA,EAA8CpB,EAAgB,uBAAuB,GAA9EqB,EAAP,KAAwBC,EAAxB,KACA,EAAsDtB,EAAgB,2BAA2B,GAA1FuB,EAAP,KAA4BC,EAA5B,KACA,EAA8CxB,EAAgB,uBAAuB,GAA9EyB,EAAP,KAAwBC,EAAxB,KAEA,GAA0BC,EAAAA,EAAAA,UAAS,CAEjCC,aAAc,GACdC,MAXiB,KAQZvB,EAAP,KAAcwB,EAAd,KAQMC,EAAoB,SAAAC,GAGxB,IAAIH,EAAQG,EAAMC,OAAOzB,MAIzB,OAAOwB,EAAMC,OAAOC,MAClB,IAAK,YACHlB,EAAcgB,EAAMC,OAAOzB,OAC3B,MACF,IAAK,WACHU,EAAkBc,EAAMC,OAAOzB,OAC/B,MAEF,IAAK,aACDY,EAAoBY,EAAMC,OAAOzB,OACjC,MACJ,IAAK,aACCc,EAAoBU,EAAMC,OAAOE,SACjC,MACN,IAAK,iBACCX,EAAwBQ,EAAMC,OAAOE,SACrC,MACN,IAAK,aACCT,EAAoBM,EAAMC,OAAOE,SASzC,IAEMP,GAFWjB,EAATpB,KACWsB,kBAAkBC,OAAS,IACnBsB,QAAO,SAAAC,GAClC,MAA8EA,EAAKC,KAAKC,YAAhFC,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,SAAUC,EAA7B,EAA6BA,WAAYC,EAAzC,EAAyCA,OAAzC,EAAiDC,YAAjD,EAA8DjD,MAA9D,EAAqEkD,KAEnE,OAEEL,EAAUM,cAAcC,SAAShC,EAAe+B,gBAChDL,EAASK,cAAcC,SAAS9B,EAAc6B,iBAC7CJ,GAA0B,IAAII,cAAcC,SAAS5B,EAAgB2B,iBACxC,IAA5BE,EAAmBC,SAAeD,GAAyC,IAAID,SAAUJ,EAAOG,mBAYtGhB,EAAS,CAEPD,MAAAA,EACAD,aAAAA,KAOIA,EAAwBtB,EAAxBsB,aAAcC,EAAUvB,EAAVuB,MAEhBqB,EADmBtB,GAnFN,KAmFsBC,EACRD,EAAehB,EAG5CuC,EAAiBhD,EAAAA,YACjBiD,EAAgBjD,EAAAA,YAChBkD,EAAkBlD,EAAAA,YAClBmD,EAAkBnD,EAAAA,YAClBoD,EAAsBpD,EAAAA,YACtBqD,EAAkBrD,EAAAA,YAElB6C,EAAmB,IAEC,IAApB3B,GAA2B2B,EAAmBS,KAAK,SAC3B,IAAxBlC,GAA+ByB,EAAmBS,KAAK,aACnC,IAApBhC,GAA2BuB,EAAmBS,KAAK,QAuFvD,OAjEAC,EAAAA,EAAAA,YAAU,YAIc,WAUvB,IAAMC,EAAUR,EAAeS,QAAQpD,MAY7BoB,GAHUjB,EAATpB,KACYsB,kBAAkBC,OAAS,IAEnBsB,QAAO,SAAAC,GAClC,MAA8EA,EAAKC,KAAKC,YAAhFC,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,SAAUC,EAA7B,EAA6BA,WAAYC,EAAzC,EAAyCA,OAAzC,EAAiDC,YAAjD,EAA8DjD,MAA9D,EAAqEkD,KAInE,OAECL,EAAUM,cAAcC,SAAShC,EAAe+B,gBAChDL,EAASK,cAAcC,SAAS9B,EAAc6B,iBAC7CJ,GAA0B,IAAII,cAAcC,SAAS5B,EAAgB2B,iBACzC,IAA5BE,EAAmBC,SAAeD,GAAyC,IAAID,SAAUJ,EAAOG,mBAiBpGhB,EAAS,CAEP6B,OAAAA,EACA/B,aAAAA,IAMLiC,KACC,CAAClD,EAAOkB,IAIT,gCACJ,gBAAC,IAAD,KACM,sBAAIlD,MAAO,CAAEmF,UAAU,WAAvB,YAGC,uBAAKC,UAAU,aAEd,4BACC,yBAAOC,IAAI,kBAAX,eACD,yBACEC,IAAKd,EACLe,GAAG,iBACHH,UAAU,cACVI,KAAK,OACLjC,KAAK,YACL1B,MAASO,EACT,aAAW,SACXqD,YAAY,6BAEbC,SAAUtC,IAIX,yBAAOiC,IAAI,iBAAX,cACA,yBACEC,IAAKb,EACLc,GAAG,gBACHH,UAAU,cACVI,KAAK,OACLjC,KAAK,WACL1B,MAASS,EACT,aAAW,SACXmD,YAAY,6BAEbC,SAAUtC,IAGX,2BAEA,yBAAOiC,IAAI,mBAAX,+CACA,yBACEC,IAAKZ,EACLa,GAAG,kBACHH,UAAU,cACVI,KAAK,OACLjC,KAAK,aACL1B,MAASW,EACT,aAAW,SACXiD,YAAY,6BAEbC,SAAUtC,IAGX,2BAEJ,yBAAG,qCAAH,IAAmB,2BACnB,uBAAKgC,UAAU,uBACf,yBAAOC,IAAI,mBAAX,QACI,yBACEC,IAAKX,EACLY,GAAG,kBACHH,UAAU,cACVI,KAAK,WACLjC,KAAK,aACLC,QAAWd,EAEZgD,SAAUtC,IAGV,2BACJ,yBAAOiC,IAAI,uBAAX,YACG,yBACEC,IAAKV,EACLW,GAAG,sBACHH,UAAU,cACVI,KAAK,WACLjC,KAAK,iBACLC,QAAWZ,EAEZ8C,SAAUtC,IAGV,2BACP,yBAAOiC,IAAI,uBAAX,QACI,yBACIC,IAAKT,EACLU,GAAG,kBACHH,UAAU,cACVI,KAAK,WACLjC,KAAK,aACLC,QAAWV,EAEZ4C,SAAUtC,MAOb,0BAAQuC,QA1LW,SAACC,GAGvBvD,EAAc,IACdE,EAAkB,IAClBE,EAAoB,IACpBE,GAAoB,GACpBE,GAAwB,GACxBE,GAAoB,GACpBsB,EAAmB,GAGnB,IAAMpB,EAAerC,EAAKsB,kBAAkBC,MAE5CgB,EAAS,CACRF,aAAAA,IAEF2C,EAAEC,mBAyKE,eAKCtB,EAAMuB,KAAI,YAAe,IAAZnC,EAAW,EAAXA,KAEJoC,EAAYpC,EAAZoC,QAER,EAAiDpC,EAAKC,YAAxC5C,GAAd,EAAQkD,KAAR,EAAclD,OAAaiD,GAA3B,EAAqB+B,KAArB,EAA2B/B,aAAagC,EAAxC,EAAwCA,KACxC,OACE,2BAAS3E,IAAK2E,GACZ,8BACE,0BACE,gBAAC,EAAA3F,KAAD,CAAMC,GAAI0F,GAAOjF,KAIrB,+BACE,qBACEkF,wBAAyB,CACvBC,OAAQlC,GAAe8B,MAM7B","sources":["webpack://gatsby-starter-default/./src/components/header.js","webpack://gatsby-starter-default/./src/components/layout.js","webpack://gatsby-starter-default/./src/pages/useHistoryState.ts","webpack://gatsby-starter-default/./src/pages/search.js"],"sourcesContent":["import * as React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport { Link } from \"gatsby\"\r\n\r\nconst Header = ({ siteTitle }) => (\r\n  <header\r\n    style={{\r\n      background: `rebeccapurple`,\r\n      marginBottom: `1.45rem`,\r\n    }}\r\n  >\r\n    <div\r\n      style={{\r\n        margin: `0 auto`,\r\n        maxWidth: 960,\r\n        padding: `1.45rem 1.0875rem`,\r\n      }}\r\n    >\r\n      <h1 style={{ margin: 0 }}>\r\n        <Link\r\n          to=\"/\"\r\n          style={{\r\n            color: `white`,\r\n            textDecoration: `none`,\r\n          }}\r\n        >\r\n          {siteTitle}\r\n        </Link>\r\n      </h1>\r\n    </div>\r\n  </header>\r\n)\r\n\r\nHeader.propTypes = {\r\n  siteTitle: PropTypes.string,\r\n}\r\n\r\nHeader.defaultProps = {\r\n  siteTitle: ``,\r\n}\r\n\r\nexport default Header\r\n","/**\r\n * Layout component that queries for data\r\n * with Gatsby's useStaticQuery component\r\n *\r\n * See: https://www.gatsbyjs.com/docs/use-static-query/\r\n */\r\n\r\nimport * as React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\n\r\nimport Header from \"./header\"\r\nimport \"./layout.css\"\r\n\r\nconst Layout = ({ children }) => {\r\n  const data = useStaticQuery(graphql`\r\n    query SiteTitleQuery {\r\n      site {\r\n        siteMetadata {\r\n          title\r\n        }\r\n      }\r\n    }\r\n  `)\r\n\r\n  return (\r\n    <>\r\n      <Header siteTitle={data.site.siteMetadata?.title || `Title`} />\r\n      <div\r\n        style={{\r\n          margin: `0 auto`,\r\n          maxWidth: 960,\r\n          padding: `0 1.0875rem 1.45rem`,\r\n        }}\r\n      >\r\n        <main>{children}</main>\r\n        <footer\r\n          style={{\r\n            marginTop: `2rem`,\r\n          }}\r\n        >\r\n          Â© {new Date().getFullYear()}, Built with\r\n          {` `}\r\n          <a href=\"https://www.gatsbyjs.com\">Gatsby</a>\r\n        </footer>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nLayout.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n}\r\n\r\nexport default Layout\r\n","import React from \"react\";\r\n\r\n/**\r\n * Stores the sate in the browser history,\r\n * making the state reusable across refreshes, navigation\r\n * and even closing and reopening the window!\r\n *\r\n * Codesandbox's preview pane does not preserve history state,\r\n * so make sure to open the preview in a new page\r\n *\r\n * @param key The key to store it in history\r\n * @param defaultTo A default value if nothing exists in history\r\n */\r\nexport function useHistoryState<T>(\r\n  key: string,\r\n  defaultTo: T\r\n): [T, (value: T) => void] {\r\n  const isBrowser = () => typeof window !== \"undefined\"\r\n  const [state, rawSetState] = React.useState(() => {\r\n    const value =isBrowser() && window.history.state && window.history.state[key];\r\n    return value || defaultTo;\r\n  });\r\n\r\n  function setState(value: T) {\r\n    window.history.replaceState(\r\n      { ...window.history.state, [key]: value },\r\n      document.title\r\n    );\r\n    rawSetState(value);\r\n  }\r\n\r\n  return [state, setState];\r\n}\r\n","//import React, { useState } from \"react\"\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Link, graphql } from \"gatsby\"\r\nimport { useHistoryState } from \"./useHistoryState\";\r\nimport Layout from \"../components/layout\"\r\n\r\n\r\n/* const TestFunc  = (props, query) => {\r\n\r\n}\r\n */\r\n\r\n\r\nconst BlogIndex = props => {\r\n\r\n  const { data } = props\r\n  const allPosts = data.allMarkdownRemark.edges\r\n  const emptyQuery = \"\"\r\n  const [firstnamestate, setNameState] = useHistoryState(\"name_input\", \"\");\r\n  const [lastnamestate, setLastNameState] = useHistoryState(\"lastname_input\", \"\");\r\n  const [othernamesstate, setOtherNamesState] = useHistoryState(\"othernames_input\", \"\");\r\n  const [statusfreestate, setStatusFreeState] = useHistoryState(\"statusfree_checkbox\", false);\r\n  const [statusenslavedstate, setStatusEnslavedState] = useHistoryState(\"statusenslaved_checkbox\", false);\r\n  const [statusbothstate, setStatusBothState] = useHistoryState(\"statusboth_checkbox\", false);\r\n\r\n  const [state, setState] = useState({\r\n\r\n    filteredData: [],\r\n    query: emptyQuery,\r\n\r\n  })\r\n\r\n  \r\n  const handleInputChange = event => {\r\n\r\n   // console.log(event.target.value)\r\n    let query = event.target.value\r\n  //  setNameState (event.target.value)\r\n  //  setLastNameState (event.target.value)\r\n\r\n    switch(event.target.name) {\r\n      case \"firstname\":\r\n        setNameState (event.target.value)\r\n        break;\r\n      case \"lastname\":\r\n        setLastNameState (event.target.value)\r\n        break;\r\n\r\n      case \"othernames\":\r\n          setOtherNamesState (event.target.value)\r\n          break; \r\n      case \"statusfree\":\r\n            setStatusFreeState (event.target.checked)\r\n            break;  \r\n      case \"statusenslaved\":\r\n            setStatusEnslavedState (event.target.checked)\r\n            break;  \r\n      case \"statusboth\":\r\n            setStatusBothState (event.target.checked)\r\n            break;  \r\n      default:\r\n        // code block\r\n    } \r\n\r\n\r\n\r\n\r\n    const { data } = props\r\n    const posts = data.allMarkdownRemark.edges || []\r\n    const filteredData = posts.filter(post => {\r\n    const { firstname, lastname, othernames, status, description, title, tags } = post.node.frontmatter\r\n// status shoudl match one of the array members\r\n      return (\r\n\r\n        firstname.toLowerCase().includes(firstnamestate.toLowerCase()) &&\r\n        lastname.toLowerCase().includes(lastnamestate.toLowerCase()) &&\r\n        (othernames ? othernames : '').toLowerCase().includes(othernamesstate.toLowerCase()) &&\r\n        ( checkedStatusBoxes.length===0 || (checkedStatusBoxes ? checkedStatusBoxes: '').includes (status.toLowerCase()) )   /*  ||\r\n        (tags &&\r\n\r\n          tags\r\n            .join(\"\")\r\n            .toLowerCase()\r\n            .includes(query.toLowerCase())) */\r\n      ) \r\n\r\n    })\r\n\r\n\r\n    setState({\r\n\r\n      query,\r\n      filteredData,\r\n    })\r\n  \r\n  }\r\n\r\n \r\n\r\n  const { filteredData, query } = state\r\n  const hasSearchResults = filteredData && query !== emptyQuery\r\n  const posts = hasSearchResults ? filteredData : allPosts\r\n  \r\n\r\n  let firstNameInput = React.createRef();\r\n  let lastNameInput = React.createRef();\r\n  let otherNamesInput = React.createRef();\r\n  let statusFreeInput = React.createRef();\r\n  let statusEnslavedInput = React.createRef();\r\n  let statusBothInput = React.createRef();\r\n\r\n  let checkedStatusBoxes=[];\r\n  \r\n  if (statusfreestate === true) {checkedStatusBoxes.push(\"free\")}\r\n  if (statusenslavedstate === true) {checkedStatusBoxes.push(\"enslaved\")}\r\n  if (statusbothstate === true) {checkedStatusBoxes.push(\"both\")}\r\n\r\n  let onOnclickHandler = (e) => { // reset all form fields\r\n   // console.log(firstNameInput.current.value); \r\n  // firstNameInput.current.value=\"\";\r\n   setNameState (\"\");\r\n   setLastNameState (\"\");\r\n   setOtherNamesState (\"\");\r\n   setStatusFreeState (false);\r\n   setStatusEnslavedState (false);\r\n   setStatusBothState (false);\r\n   checkedStatusBoxes=[];\r\n\r\n\r\n   const filteredData = data.allMarkdownRemark.edges\r\n   \r\n   setState({\r\n    filteredData,\r\n  })\r\n  e.preventDefault();\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Run! Like go get some data from an API.\r\n    //this.searchBox.focus(); \r\n\r\n    const restoreSearch = () => {\r\n   \r\n      //console.log (firstNameInput.current.value)\r\n     \r\n      // this.nameInput.focus(); \r\n    \r\n     //const query = event.target.value\r\n    //setNameState (event.target.value)\r\n\r\n\r\n   const query2 =  firstNameInput.current.value\r\n   \r\n   //let query2 =  query\r\n\r\n  //  if (query2 ===undefined) {\r\n  //    query2=\"\"\r\n  //  }\r\n   \r\n   // const query2 = event.target.value;\r\n      const { data } = props\r\n       const posts = data.allMarkdownRemark.edges || []\r\n    \r\n       const filteredData = posts.filter(post => {\r\n       const { firstname, lastname, othernames, status, description, title, tags } = post.node.frontmatter\r\n     //  if (posts) { console.log(\"Array is empty!\") }\r\n   \r\n\r\n         return (\r\n          \r\n          firstname.toLowerCase().includes(firstnamestate.toLowerCase()) &&\r\n          lastname.toLowerCase().includes(lastnamestate.toLowerCase()) &&\r\n          (othernames ? othernames : '').toLowerCase().includes(othernamesstate.toLowerCase()) &&\r\n         ( checkedStatusBoxes.length===0 || (checkedStatusBoxes ? checkedStatusBoxes: '').includes (status.toLowerCase()) )\r\n           /* ||\r\n           (tags &&\r\n   \r\n             tags\r\n               .join(\"\")\r\n               .toLowerCase()\r\n               .includes(query2.toLowerCase())) */\r\n         )\r\n   \r\n       }\r\n\r\n      \r\n       \r\n       )\r\n   \r\n   \r\n       setState({\r\n   \r\n         query2,\r\n         filteredData,\r\n       })\r\n   \r\n   \r\n     }\r\n\r\n    restoreSearch()\r\n  }, [props, query ]);\r\n\r\n  return (\r\n\r\n    <>\r\n<Layout>\r\n      <h1 style={{ textAlign: `center` }}>Articles</h1>\r\n\r\n\r\n       <div className=\"searchBox\">\r\n\r\n        <form>\r\n         <label for=\"firstNameInput\">First Name:</label>\r\n        <input \r\n          ref={firstNameInput}\r\n          id=\"firstNameInput\"\r\n          className=\"searchInput\"\r\n          type=\"text\"\r\n          name=\"firstname\"\r\n          value = {firstnamestate}\r\n          aria-label=\"Search\"\r\n          placeholder=\"Type to filter articles...\"\r\n\r\n         onChange={handleInputChange}\r\n    //     onFocus     ={handleInputChange} // this refreshes the form with input values that we get from history state\r\n         />\r\n   \r\n        <label for=\"lastNameInput\">Last Name:</label>\r\n        <input \r\n          ref={lastNameInput}\r\n          id=\"lastNameInput\"\r\n          className=\"searchInput\"\r\n          type=\"text\"\r\n          name=\"lastname\"\r\n          value = {lastnamestate}\r\n          aria-label=\"Search\"\r\n          placeholder=\"Type to filter articles...\"\r\n\r\n         onChange={handleInputChange}\r\n    //     onFocus     ={handleInputChange} // this refreshes the form with input values that we get from history state\r\n         />\r\n        <br/>\r\n\r\n        <label for=\"otherNamesInput\">Alternate names, nicknames, spellings etc.:</label>\r\n        <input \r\n          ref={otherNamesInput}\r\n          id=\"otherNamesInput\"\r\n          className=\"searchInput\"\r\n          type=\"text\"\r\n          name=\"othernames\"\r\n          value = {othernamesstate}\r\n          aria-label=\"Search\"\r\n          placeholder=\"Type to filter articles...\"\r\n\r\n         onChange={handleInputChange}\r\n    //     onFocus     ={handleInputChange} // this refreshes the form with input values that we get from history state\r\n         />\r\n        <br/>\r\n\r\n    <p><b>Status: </b> <br/>\r\n    <div className=\"searchInputIndented\">\r\n    <label for=\"statusFreeInput\">Free</label>\r\n        <input \r\n          ref={statusFreeInput}\r\n          id=\"statusFreeInput\"\r\n          className=\"searchInput\"\r\n          type=\"checkbox\"\r\n          name=\"statusfree\"\r\n          checked = {statusfreestate}\r\n\r\n         onChange={handleInputChange}\r\n    //     onFocus     ={handleInputChange} // this refreshes the form with input values that we get from history state\r\n         />\r\n         <br/>\r\n     <label for=\"statusEnslavedInput\">Enslaved</label>\r\n        <input \r\n          ref={statusEnslavedInput}\r\n          id=\"statusEnslavedInput\"\r\n          className=\"searchInput\"\r\n          type=\"checkbox\"\r\n          name=\"statusenslaved\"\r\n          checked = {statusenslavedstate}\r\n\r\n         onChange={handleInputChange}\r\n    //     onFocus     ={handleInputChange} // this refreshes the form with input values that we get from history state\r\n         />\r\n         <br/>\r\n  <label for=\"statusEnslavedInput\">Both</label>\r\n      <input \r\n          ref={statusBothInput}\r\n          id=\"statusBothInput\"\r\n          className=\"searchInput\"\r\n          type=\"checkbox\"\r\n          name=\"statusboth\"\r\n          checked = {statusbothstate}\r\n\r\n         onChange={handleInputChange}\r\n    //     onFocus     ={handleInputChange} // this refreshes the form with input values that we get from history state\r\n         />\r\n      </div>\r\n         </p>\r\n\r\n\r\n      <button onClick={onOnclickHandler}>Clear form</button>\r\n        </form>\r\n\r\n  \r\n      \r\n      {posts.map(({ node }) => {\r\n\r\n        const { excerpt } = node\r\n     //   const { slug } = node.fields\r\n        const { tags, title, date, description, slug } = node.frontmatter\r\n        return (\r\n          <article key={slug}>\r\n            <header >\r\n              <h2>\r\n                <Link to={slug}>{title}</Link>\r\n              </h2>\r\n           \r\n            </header>\r\n            <section>\r\n              <p\r\n                dangerouslySetInnerHTML={{\r\n                  __html: description || excerpt,\r\n                }}\r\n\r\n              />\r\n\r\n            </section>\r\n            <hr />\r\n          </article>\r\n   \r\n        )  }\r\n       )\r\n     }\r\n        </div>\r\n      </Layout>\r\n \r\n    </>\r\n\r\n  )\r\n\r\n}\r\n\r\n\r\n\r\n\r\nexport default BlogIndex\r\n\r\n\r\nexport const pageQuery = graphql`\r\n  query {\r\n    allMarkdownRemark(sort: { order: ASC, fields: [frontmatter___slug] }) {\r\n      edges {\r\n        node {\r\n          id\r\n          excerpt(pruneLength: 250)\r\n          frontmatter {\r\n            date(formatString: \"MMMM DD, YYYY\")\r\n            slug\r\n            title\r\n            description\r\n            firstname\r\n            lastname\r\n            othernames\r\n            status\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\n\r\n"],"names":["Header","siteTitle","style","background","marginBottom","margin","maxWidth","padding","Link","to","color","textDecoration","defaultProps","children","data","useStaticQuery","site","siteMetadata","title","marginTop","Date","getFullYear","href","useHistoryState","key","defaultTo","React","window","history","state","rawSetState","value","replaceState","document","props","allPosts","allMarkdownRemark","edges","firstnamestate","setNameState","lastnamestate","setLastNameState","othernamesstate","setOtherNamesState","statusfreestate","setStatusFreeState","statusenslavedstate","setStatusEnslavedState","statusbothstate","setStatusBothState","useState","filteredData","query","setState","handleInputChange","event","target","name","checked","filter","post","node","frontmatter","firstname","lastname","othernames","status","description","tags","toLowerCase","includes","checkedStatusBoxes","length","posts","firstNameInput","lastNameInput","otherNamesInput","statusFreeInput","statusEnslavedInput","statusBothInput","push","useEffect","query2","current","restoreSearch","textAlign","className","for","ref","id","type","placeholder","onChange","onClick","e","preventDefault","map","excerpt","date","slug","dangerouslySetInnerHTML","__html"],"sourceRoot":""}